version: '3.7'

services:
    nginx:
        build:
            context: .
            dockerfile: docker/nginx/Dockerfile
        ports:
            - "8080-8099:80-99"
        volumes:
            - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
            - ./projects/online_store:/var/www/html/online_store/:z
            - ./projects/crm:/var/www/html/crm/:z
        depends_on:
            - online_store
            - crm
        networks:
            - project

    online_store:
        build:
            context: .
            dockerfile: docker/php/online_store/Dockerfile
        volumes:
            - ./docker/php/online_store/php.ini:/usr/local/etc/php/php.ini
            - ./projects/online_store:/var/www/html/online_store/:z
        depends_on:
            mysql_online_store:
                condition: service_healthy
            rabbitmq:
                condition: service_healthy
        links:
            - rabbitmq
        networks:
            - project

    crm:
        build:
            context: .
            dockerfile: docker/php/crm/Dockerfile
        volumes:
            - ./docker/php/crm/php.ini:/usr/local/etc/php/php.ini
            - ./projects/crm:/var/www/html/crm/:z
        depends_on:
            mysql_crm:
                condition: service_healthy
            rabbitmq:
                condition: service_healthy
        links:
            - rabbitmq
        deploy:
            replicas: 1
        networks:
            - project

    #https://stackoverflow.com/questions/31746182/docker-compose-wait-for-container-x-before-starting-y
    rabbitmq:
        build:
            context: .
            dockerfile: docker/rabbitmq/Dockerfile
        ports:
            - "15672:15672"
            - "5672:5672"
        healthcheck:
            test: [ "CMD", "curl", "-f", "http://localhost:15672" ]
            interval: 30s
            timeout: 10s
            retries: 5
        volumes:
            - rabbitmq-data:/var/lib/rabbitmq
        networks:
            - project

    mysql_crm:
        image: 'mysql/mysql-server:8.0'
        environment:
            MYSQL_ROOT_HOST: '%'
            MYSQL_ROOT_PASSWORD: '${DB_ROOT_PASSWORD}'
        volumes:
            - 'mysql_crm:/var/lib/mysql'
            - ./docker/provision/mysql/init:/docker-entrypoint-initdb.d
        networks:
            - project
        healthcheck:
            test:
                - CMD
                - mysqladmin
                - ping
                - '-p${DB_ROOT_PASSWORD}'
            retries: 3
            timeout: 5s

    mysql_online_store:
        image: 'mysql/mysql-server:8.0'
        environment:
            MYSQL_ROOT_HOST: '%'
            MYSQL_ROOT_PASSWORD: '${DB_ROOT_PASSWORD}'
        volumes:
            - 'mysql_online_store:/var/lib/mysql'
            - ./docker/provision/mysql/init:/docker-entrypoint-initdb.d
        networks:
            - project
        healthcheck:
            test:
                - CMD
                - mysqladmin
                - ping
                - '-p${DB_ROOT_PASSWORD}'
            retries: 3
            timeout: 5s

networks:
    project:
        driver: bridge

volumes:
    rabbitmq-data:
    mysql_crm:
        driver: local
    mysql_online_store:
        driver: local